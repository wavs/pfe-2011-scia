#include "text.hh"

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

TextMaterial::TextMaterial(Font* parFont, const std::string& parText, Vector2i& parSize, int parStyle)
  : Material("", MaterialEnum::TEXT),
    MTextureId(0),
    MFont(parFont)
{
  LOG_ASSERT(parFont != NULL);

  MTextureId = parFont->NewStrTexture(parText, parSize, parStyle);
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

TextMaterial::~TextMaterial()
{
  if (MTextureId != 0)
    MFont->DeleteStrTexture(MTextureId);
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void TextMaterial::PreRender()
{
  glBindTexture(GL_TEXTURE_2D, MTextureId);
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void TextMaterial::PostRender()
{
  glBindTexture(GL_TEXTURE_2D, 0);
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

TextMaterialDescriptor::TextMaterialDescriptor()
{
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

TextMaterialDescriptor::~TextMaterialDescriptor()
{
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

TextMaterial* TextMaterialDescriptor::Load(XmlTree& parXmlFile) const
{
  LOG_ASSERT(false);
  return NULL;
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void TextMaterialDescriptor::PreRender() const
{
  glEnable(GL_BLEND);
  glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
  glEnable(GL_TEXTURE_2D);
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void TextMaterialDescriptor::PostRender() const
{
  glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
  glDisable(GL_TEXTURE_2D);
  glDisable(GL_BLEND);
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
