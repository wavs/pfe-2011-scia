#include "timer.hh"
#include "macro.hh"
#include "templated_function.hh"
#include "log.hh"

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

Timer::Timer()
  : MElapsTime(0.0f),
    MScale(1.0f),
    MTimeFromCreation(0.0f),
    MPause(false)
{
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

Timer::~Timer()
{
  assert(MTimers.empty());
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void Timer::Restart()
{
  MElapsTime = 0.0f;
  MTimeFromCreation = 0.0f;
  MPause = false;

  foreach(it, MTimers)
    (*it)->Restart();
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void Timer::Update(float parElapsTime)
{
  MElapsTime = MPause ? 0.0f : MScale * parElapsTime;
  MTimeFromCreation += MElapsTime;

  foreach(it, MTimers)
    (*it)->Update(MElapsTime);
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

Timer* Timer::CreateTimer()
{
  Timer* timer = new Timer();
  MTimers.push_back(timer);
  return timer;
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void Timer::DeleteTimer(Timer* parTimer)
{
  assert(parTimer != NULL);
  assert(misc::find(parTimer, MTimers));
  MTimers.remove(parTimer);
  delete parTimer;
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
