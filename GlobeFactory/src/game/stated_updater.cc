#include "stated_updater.hh"

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

StatedUpdater::StatedUpdater()
{
  for (unsigned i = 0; i < STATE_COUNT; ++i)
    MClients[i] = NULL;
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

StatedUpdater::~StatedUpdater()
{
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void StatedUpdater::Update()
{
  StateEnum state = StateHandler::get()->GetCurrentState();
  if (MClients[state] != NULL)
    MClients[state]->Update();
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void StatedUpdater::SetStateClient(Updatable* parClient, StateEnum parState)
{
  LOG_ASSERT(parClient != NULL);

  MClients[parState] = parClient;
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

void StatedUpdater::RemoveStateClient(StateEnum parState)
{
  LOG_ASSERT(MClients[parState] != NULL);

  MClients[parState] = NULL;
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
